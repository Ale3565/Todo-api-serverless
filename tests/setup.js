"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.cloudWatchMock = exports.ddbMock = void 0;
// Configurar variables de entorno para pruebas ANTES de importar cualquier módulo
process.env.NODE_ENV = 'test';
process.env.TABLE_NAME = 'TestTodos';
process.env.AWS_REGION = 'local';
process.env.AWS_REQUEST_ID = 'test-request-id';
// Importar y configurar los mocks ANTES de que cualquier otro módulo importe AWS SDK
const aws_sdk_client_mock_1 = require("aws-sdk-client-mock");
const lib_dynamodb_1 = require("@aws-sdk/lib-dynamodb");
const client_cloudwatch_1 = require("@aws-sdk/client-cloudwatch");
// Crear y configurar los mocks globalmente
exports.ddbMock = (0, aws_sdk_client_mock_1.mockClient)(lib_dynamodb_1.DynamoDBDocumentClient);
exports.cloudWatchMock = (0, aws_sdk_client_mock_1.mockClient)(client_cloudwatch_1.CloudWatchClient);
// Configurar comportamiento por defecto para evitar errores
exports.ddbMock.resolves({});
exports.cloudWatchMock.resolves({});
// Configurar los mocks antes de cada prueba
beforeEach(() => {
    // Resetear los mocks manteniendo la configuración base
    exports.ddbMock.reset();
    exports.cloudWatchMock.reset();
    // Restaurar comportamiento por defecto
    exports.cloudWatchMock.resolves({});
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0dXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzZXR1cC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxrRkFBa0Y7QUFDbEYsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDO0FBQzlCLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxHQUFHLFdBQVcsQ0FBQztBQUNyQyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsR0FBRyxPQUFPLENBQUM7QUFDakMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLEdBQUcsaUJBQWlCLENBQUM7QUFFL0MscUZBQXFGO0FBQ3JGLDZEQUFpRDtBQUNqRCx3REFBK0Q7QUFDL0Qsa0VBQThEO0FBRTlELDJDQUEyQztBQUM5QixRQUFBLE9BQU8sR0FBRyxJQUFBLGdDQUFVLEVBQUMscUNBQXNCLENBQUMsQ0FBQztBQUM3QyxRQUFBLGNBQWMsR0FBRyxJQUFBLGdDQUFVLEVBQUMsb0NBQWdCLENBQUMsQ0FBQztBQUUzRCw0REFBNEQ7QUFDNUQsZUFBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUNyQixzQkFBYyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUU1Qiw0Q0FBNEM7QUFDNUMsVUFBVSxDQUFDLEdBQUcsRUFBRTtJQUNkLHVEQUF1RDtJQUN2RCxlQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDaEIsc0JBQWMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUV2Qix1Q0FBdUM7SUFDdkMsc0JBQWMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDOUIsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb25maWd1cmFyIHZhcmlhYmxlcyBkZSBlbnRvcm5vIHBhcmEgcHJ1ZWJhcyBBTlRFUyBkZSBpbXBvcnRhciBjdWFscXVpZXIgbcOzZHVsb1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgPSAndGVzdCc7XG5wcm9jZXNzLmVudi5UQUJMRV9OQU1FID0gJ1Rlc3RUb2Rvcyc7XG5wcm9jZXNzLmVudi5BV1NfUkVHSU9OID0gJ2xvY2FsJztcbnByb2Nlc3MuZW52LkFXU19SRVFVRVNUX0lEID0gJ3Rlc3QtcmVxdWVzdC1pZCc7XG5cbi8vIEltcG9ydGFyIHkgY29uZmlndXJhciBsb3MgbW9ja3MgQU5URVMgZGUgcXVlIGN1YWxxdWllciBvdHJvIG3Ds2R1bG8gaW1wb3J0ZSBBV1MgU0RLXG5pbXBvcnQgeyBtb2NrQ2xpZW50IH0gZnJvbSAnYXdzLXNkay1jbGllbnQtbW9jayc7XG5pbXBvcnQgeyBEeW5hbW9EQkRvY3VtZW50Q2xpZW50IH0gZnJvbSAnQGF3cy1zZGsvbGliLWR5bmFtb2RiJztcbmltcG9ydCB7IENsb3VkV2F0Y2hDbGllbnQgfSBmcm9tICdAYXdzLXNkay9jbGllbnQtY2xvdWR3YXRjaCc7XG5cbi8vIENyZWFyIHkgY29uZmlndXJhciBsb3MgbW9ja3MgZ2xvYmFsbWVudGVcbmV4cG9ydCBjb25zdCBkZGJNb2NrID0gbW9ja0NsaWVudChEeW5hbW9EQkRvY3VtZW50Q2xpZW50KTtcbmV4cG9ydCBjb25zdCBjbG91ZFdhdGNoTW9jayA9IG1vY2tDbGllbnQoQ2xvdWRXYXRjaENsaWVudCk7XG5cbi8vIENvbmZpZ3VyYXIgY29tcG9ydGFtaWVudG8gcG9yIGRlZmVjdG8gcGFyYSBldml0YXIgZXJyb3Jlc1xuZGRiTW9jay5yZXNvbHZlcyh7fSk7XG5jbG91ZFdhdGNoTW9jay5yZXNvbHZlcyh7fSk7XG5cbi8vIENvbmZpZ3VyYXIgbG9zIG1vY2tzIGFudGVzIGRlIGNhZGEgcHJ1ZWJhXG5iZWZvcmVFYWNoKCgpID0+IHtcbiAgLy8gUmVzZXRlYXIgbG9zIG1vY2tzIG1hbnRlbmllbmRvIGxhIGNvbmZpZ3VyYWNpw7NuIGJhc2VcbiAgZGRiTW9jay5yZXNldCgpO1xuICBjbG91ZFdhdGNoTW9jay5yZXNldCgpO1xuICBcbiAgLy8gUmVzdGF1cmFyIGNvbXBvcnRhbWllbnRvIHBvciBkZWZlY3RvXG4gIGNsb3VkV2F0Y2hNb2NrLnJlc29sdmVzKHt9KTtcbn0pOyJdfQ==